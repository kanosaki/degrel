package degrel.visualize.view;

import degrel.visualize.GraphicsAdapter;
import degrel.visualize.Vec;
import degrel.visualize.viewmodel.GraphViewModel;
import degrel.visualize.viewmodel.grapharranger.EdgeViewModel;
import degrel.visualize.viewmodel.grapharranger.VertexViewModel;
import scala.runtime.AbstractFunction2;
import scala.runtime.BoxedUnit;

import javax.swing.*;
import java.awt.*;

public class GraphView extends JPanel {
    /*
     * 描画の方針:
     * * 頂点・接続はGraphicsで直に描画
     * * 頂点はクリック，ドラッグ等の判定を持たせ，クリック等されればカスタマイズ可能なUIを表示する
     */
    private GraphViewModel viewmodel;
    private Vec pad = new Vec(100, 100);
    private JButton button1;

    public GraphView(GraphViewModel vm) {
        if (vm == null) throw new NullPointerException("vm");
        this.viewmodel = vm;
        vm.onRequestRedraw().register(new AbstractFunction2<Object, BoxedUnit, BoxedUnit>() {
            @Override
            public BoxedUnit apply(Object v1, BoxedUnit v2) {
                repaint();
                return null;
            }
        });
    }

    @Override
    protected void paintComponent(Graphics gg) {
        super.paintComponent(gg);
        GraphicsAdapter g = new GraphicsAdapter(gg);
        for (VertexViewModel vvm : viewmodel.verticesJ()) {
            g.fillOvalCenter(pad.$plus(vvm.location()), 10, 10);
        }
        for (EdgeViewModel evm : viewmodel.edgesJ()) {
            g.drawLine(pad.$plus(evm.from()), pad.$plus(evm.to()));
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        panel1.setBackground(new Color(-1));
        button1 = new JButton();
        button1.setText("Button");
        panel1.add(button1, BorderLayout.NORTH);
    }
}
